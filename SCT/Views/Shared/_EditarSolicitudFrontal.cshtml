@model SCT.Models.Solicitud

    <script type="text/javascript">
    @if (TempData["Message"] != null)
      {
      <text>
            $(window).on('load', function () {
                $(document).ready(function () {
                    Swal.fire({
                        icon: 'error',
                        title: "@TempData["Message"]",
                        confirmButtonText: "Entendido",
                        confirmButtonColor: '#A02383',
                    })
                });
            });
        </text>
    }
    </script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idOrden)
        @Html.HiddenFor(model => model.imei)
        @Html.HiddenFor(model => model.imeiSustituido)
        @Html.HiddenFor(model => model.serie)
        @Html.HiddenFor(model => model.fecha)
        @Html.HiddenFor(model => model.nombreUsuario)



        <div class="form-group">
            @Html.LabelFor(model => model.datosCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.datosCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.datosCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cedulaCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cedulaCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cedulaCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idModelo, "Modelo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @Html.DropDownList("idModelo", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idModelo, "", new { @class = "text-danger" })
        </div>
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idFormaPago, "Forma Pago", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idFormaPago", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idFormaPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idTipoTramite, "Tramite", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idTipoTramite", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idTipoTramite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<div>
    @Html.ActionLink("Regresar", "IndexFrontal")
</div>
