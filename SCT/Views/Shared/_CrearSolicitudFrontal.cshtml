@model SCT.Models.Solicitud

@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@*<input class="form-control" id="idModelo" />*@

<script type="text/javascript">
    @if (TempData["Message"] != null)
      {
      <text>
            $(window).on('load', function () {
                $(document).ready(function () {
                    Swal.fire({
                        icon: 'error',
                        title: "@TempData["Message"]",
                        confirmButtonText: "Entendido",
                        confirmButtonColor: '#A02383',
                    })
                });
            });
        </text>
    }
</script>
@using (Html.BeginForm())
{


    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.imei, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.imei, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.imei, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.serie, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.serie, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.serie, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.imeiSustituido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.imeiSustituido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.imeiSustituido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nombreUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombreUsuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombreUsuario, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.datosCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.datosCliente, new { htmlAttributes = new { @class = "form-control valid", data_val = "true", data_val_required = "El campo datos cliente es obligatorio", data_val_length = "Longitud maxima 150 caracteres", data_val_length_max = "150" } })
                @Html.ValidationMessageFor(model => model.datosCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cedulaCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cedulaCliente, new { htmlAttributes = new { @class = "form-control valid", data_val = "true", data_val_required = "El campo cédula es obligatorio" , data_val_length = "Longitud entre 9 y 13 caracteres" , data_val_length_max = "13" ,data_val_length_min = "9" } })
                @Html.ValidationMessageFor(model => model.cedulaCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pedido, new { htmlAttributes = new { @class = "form-control valid", data_val = "true", data_val_required = "El campo pedido es obligatorio" , data_val_length = "Longitud maxima 13 caracteres", data_val_length_max = "13" } })
                @Html.ValidationMessageFor(model => model.pedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control valid", data_val = "true", data_val_required = "El campo número es obligatorio", data_val_length = "Longitud requerida de 8 caracteres", data_val_length_max = "8", data_val_length_min = "8" } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idModelo, "Modelo", htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.DropDownList("idModelo", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idModelo, "", new { @class = "text-danger" })
                </div>*@
            <div class="col-md-10">

                @Html.TextBox("idModelo", "", null, new { @class = "form-control valid", data_val = "true", data_val_required = "El campo Modelo es obligatorio", data_val_length = "Longitud maxima 50 caracteres", data_val_length_max = "50" })
                @Html.ValidationMessageFor(model => model.idModelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idTipoTramite, "Tramite", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idTipoTramite", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idTipoTramite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idFormaPago, "Forma Pago", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idFormaPago", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idFormaPago, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Solicitar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $("#idModelo").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetSearchValue","Solicituds")',
                dataType: "json",
                data: { search: $("#idModelo").val() },
                success: function (data) {
                    response($.map(data, function (item) {
                        return { label: item.nombreModelo, value: item.nombreModelo };
                    }));
                },
                error: function (xhr, status, error) {
                    alert("Error");
                }
            });
        }
    });
</script>

<div>
    @Html.ActionLink("Regresar", "IndexFrontal")
</div>
